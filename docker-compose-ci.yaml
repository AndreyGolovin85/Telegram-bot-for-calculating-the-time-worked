version: "3.3"

services:
  bot:
    image: andreygolovin5/telegrambot_time:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    restart: always
    environment:
      API_TOKEN: $API_TOKEN
      ADMIN_ID: $ADMIN_ID
      PRODUCTION_CALENDAR: $PRODUCTION_CALENDAR
      ACCESS_KEY: $ACCESS_KEY
      POSTGRES_HOST: $POSTGRES_HOST
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_PORT: $POSTGRES_PORT
    depends_on:
      - tgbot
    command: >
      sh -c "cd ./bot && alembic upgrade head && cd ../. && python bot/bot.py"

  tgbot:
    image: postgres:15.1-alpine
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
    restart: always
    ports:
      - "6785:6785"
    volumes:
      - pgdata:/var/lib/postgresql/data
    command: -p 6785
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  sql-exporter:
    image: burningalchemist/sql_exporter:latest
    container_name: sql-exporter
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
    restart: always
    ports:
      - "9399:9399"
    volumes:
      - source: ./sql_exporter.yml
        target: /etc/sql_exporter.yml
        read_only: true
    command: [ "--config.file=/etc/sql_exporter.yml" ]

volumes:
    pgdata:
