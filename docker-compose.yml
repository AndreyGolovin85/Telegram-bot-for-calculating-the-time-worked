version: "3.9"

services:
  tgbot:
    image: postgres:15.1-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - data:/var/lib/postgresql/data
    command: -p 5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  sql-exporter:
    image: burningalchemist/sql_exporter:latest
    container_name: sql-exporter
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST_D: ${POSTGRES_HOST_D}
      POSTGRES_PORT: ${POSTGRES_PORT}
    restart: always
    env_file:
      - .env
    ports:
      - "9399:9399"
    volumes:
      - ./sql_exporters/sql_exporter.yml:/sql_exporter.yml:ro
      - ./sql_exporters/collector:/collector:ro
    command: [ "--config.file=/sql_exporter.yml" ]
    depends_on:
      tgbot:
        condition: service_healthy

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    depends_on:
      - sql-exporter

volumes:
  data:
  prometheus_data:
